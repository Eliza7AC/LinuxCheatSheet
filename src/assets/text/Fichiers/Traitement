AFFICHER « BONJOUR » PUIS « ÇA VA » A LA LIGNE	echo -e “bonjour\nca va ?”
AFFICHER UN FICHIER	cat file
afficher un fichier avec les lignes	cat file -n
pareil, avec lignes colorées	file | egrep “” -n
AFFICHER FILE1 ET FILE2 A LA SUITE	cat file1 file2
AFFICHER LES 10 PREMIERES LIGNES D’UN FICHIER	head -n 10 fileNetwork
PAREIL, EN AFFICHANT LES NUMEROS DES LIGNES (DYNAMIQUE)	head -n 10 fileNetwork | less -N
PAREIL, EN AFFICHANT LES NUMEROS DES LIGNES (STATIQUE, EN COULEUR)	head -n 10 fileNetwork | egrep “” -n
AFFICHER LES 20 PREMIERES LIGNES DU MANUEL	man command | head -n 20
AFFICHER LES LIGNES 168 A 178 DU MANUEL	man command | sed -n 168,178p
AFFICHER LES 10 DERNIERES LIGNES	tail -n 10 fileNetwork
AFFICHER LES 10 DERNIERES LIGNES (ALTERNATIVE)	tail -10
AFFICHER TOUT SAUF LES 10 PREMIERES LIGNES	tail +11
AFFICHER L’EVOLUTION DES 5 DERNIERES LIGNES DU FICHIER /VAR/LOG/SYSLOG	tail -n 10 -f /var/log/syslog (f = follow)
INVERSER LES LIGNES DE FILE (LES DERNIERES LIGNES SONT AFFICHEES EN PREMIER)	tac file
AFFICHER LES MOTS DU FICHIER FILE A L’ENVERS (effet MIROIR)	rev file
###
AFFICHER UN GRAND FICHIER ET LE PARCOURIR	less fileNetwork
AFFICHER LES LIGNES	-N
ALLER D’UN LIGNE VERS LE BAS	entrée
RETOURNER EN ARRIERE D’UNE LIGNE	y
ALLER D’UN ECRAN VERS LE BAS	espace
ALLER D’UN ECRAN VERS LE HAUT	b
SAVOIR OU ON EN EST DANS LE FICHIER	=
QUITTER	q
CHERCHER LE MOT « BOX »	/box
ALLER A LA PROCHAINE OCCURRENCE	n
ALLER A L’OCCURRENCE PRECEDENTE	N
CHERCHER LES EXP COMMENÇANT PAR « BOX »	/box*
ALLER AU DEBUT	g
ALLER A LA LIGNE 5	5g
ALLER A LA FIN	G
###
COMPTER LE NOMBRE DE LIGNES DANS file	wc -l file
COMPTER LE NBRE DE LIGNE DANS LE MOT « BONJOUR »	echo “bonjour” | wc -l
COMPTER LE NOMBRE DE MOTS DANS FILE	wc -w file
COMPTER LE NBRE DE CHARACTERES DS LE MOT « BONJOUR »	echo “bonjour” | wc -c
COMPTER LE NOMBRE DE CHARACTERES DANS FILE	wc -c file
PAREIL, EN CHARGEANT LE FICHIER	wc -c < file
comparer les commandes env et printenv avec wc	env | wc && printenv | wc
TRIER PAR ORDRE ALPHABETIQUE UN FICHIER	sort file
SUPPRIMER LES LIGNES EN DOUBLE DE FILE	sort file | uniq
AFFICHER LES LIGNES QUI APPARAISSENT PLUS D’UNE FOIS	sort file | uniq -d (repeated ou double)
AFFICHER LES LIGNES QUI N’APPARAISSENT QU’UNE FOIS	sort file | uniq -u (unique)
AFFICHER L’OCCURRENCE DES LIGNES	sort file | uniq -c (count)
AFFICHER L’OCCURRENCE DES MOTS QUI APPARAISSENT PLUSIEURS FOIS	sort file | uniq -cd
AFFICHER L’OCCURRENCE DES MOTS QUI N’APPARAISSENT QU’UNE FOIS	sort file | uniq -cu
AFFICHER LA PREMIERE LETTRE DE CHAQUE LIGNE	cut -c 1 file (character)
AFFICHER LE PREMIER CHARACTERE D’UN FICHIER	head -n 1 file | cut -c 1
AFFICHER LA PREMIERE ET 4EME LETTRE	cut -c 1,4 file
AFFICHER LES TROIS PREMIERS CHARACTERES AVEC INDEX	cut -c 1,2,3 file
AFFICHER LES TROIS PREMIERS CHARACTERES AVEC INTERVALLE	cut -c 1-3 file
AFFICHER LE TROISIEME CHAMP, DANS UN FICHIER AVEC INFOS SEPAREES PAR VIRGULE	cut -d , -f 3 file (delimiter, field)
AFFICHER LES CHAMPS 2 ET 4	cut -d , -f 2,4 file
DELIMITER AVEC UN ESPACE	cut -d “ ” file
###
AFFICHER UN FICHIER AVEC SED	sed ‘’ file
AFFICHER UN FICHIER AVEC SED ET NUMERO DE LIGNE	sed = file
SUPPRIMER LA LIGNE 3	sed ‘3d’ file (delete)
FAIRE L’INVERSE (SUPPRIMER TOUT SAUF LA LIGNE 3)	sed ‘3!d’ file
SUPPRIMER LA LIGNE 4 ET LA LIGNE 7 D’UN FICHIER	sed ‘4d;7d’ file
SUPPRIMER DE LA LIGNE 4 A LA LIGNE 7	sed ‘4,7d’ file
UTILISER UNE REGEX AVEC SED	sed ‘/regex/commande’ file
SUPPRIMER TOUTES LES LIGNES COMMENÇANT PAR #	sed ‘/^#/d’ file
SUPPRIMER TOUTES LES LIGNES ENTRE 2 MOTIFS REGEX	sed ‘/r1/,/r2/d’ file
SUPPRIMER TTES LES LIGNES ENTRE « BONJOUR » ET « AU REVOIR »	sed '/^Bonjour/,/^Au revoir/d' file
SUPPRIMER A PARTIR DE LA LIGNE 4 JUSQU’A UNE LIGNE COMMENÇANT PAR #	sed ‘4,/^#/d’ file
N’AFFICHER QUE LES LIGNES A PARTIR DE LA LIGNE 4 JUSQU’A TROUVER UNE LIGNE COMMENÇANT PAR #	sed -n ‘4,/^#/p’ file
REMPLACER UN MOTIF PAR UN SUBSTITUT (REMPLACER UNE CHAINE DE CARACTERES PAR UNE AUTRE)	sed ‘s/motif/substitut/’ file
REMPLACER LA 1ERE OCCURRENCE DE B PAR BB A CHAQUE LIGNE	sed ‘s/B/BB/’ file
REMPLACER LA 3EME OCCURRENCE DE B PAR BB A CHAQUE LIGNE 	sed ‘s/B/BB/3’ file
REMPLACER TOUS LES B PAR BB A CHAQUE LIGNE (DONC TOUS LES B DU FICHIER)	sed ‘s/B/BB/g’ file
SUPPRIMER LES I	sed ‘s/I//’ file
REMPLACER LE MOT « PRENOM » PAR « PRENOM »	sed ‘s/prenom/PRENOM/’ file
SUPPRIMER LES # EN DEBUT DE LIGNE	sed -re 's/^#//' fichier
SUPPRIMER LES # EN DEBUT DE LIGNE, SUIVANT D’UN OU PLUSIEURS ESPACES	sed -re 's/^# *//' fichier
UTILISER LA TRANSLITTERATION (REMPLACER UN CARACTERE PAR UN AUTRE)	sed ‘y/charactere/charactere’ file
REMPLACER TOUTES LES LETTRES E AVEC ACCENT PAR DES LETTRES E SANS ACCENTS	sed -re ‘y/éèê/eee/’ test.txt
PAREIL, SUR LA LIGNE 2 ET 3 UNIQUEMENT	sed -re ‘2,3y/éèê/eee/’ test.txt
PAREIL, ET REMPLACER LES O PAR 0	sed -re ‘2,3y/éèêo/eee0/’ test.txt
TRIER LES FRUITS PAR ORDRE D’OCCURENCE	cat fruits | sort | uniq -c | sort
AFFICHER LE FRUIT QUI APPARAIT LE PLUS	cat fruits | sort | uniq -c | sort | tail -n 1
AFFICHER L’OCCURRENCE UNIQUEMENT DU FRUIT QUI APPARAIT LE PLUS	cat fruits | sort | uniq -c | sort | tail -n 1 | sed ‘s/ *//’ | cut -c 1
AFFICHER PAR OCCURRENCE DECROISSANTE	cat fruits | sort | uniq -c | sort | tac
SELECTIONNER LE MOT AU MILIEU DE LA LIGNE DU MILIEU (5 LIGNES AU TOTAL PAR EX, ET 11 MOTS PAR LIGNE)	cat fruits | sed ‘5!d’ file | cut -d ‘ ‘ -f 6
AJOUTER UNE NOUVELLE LIGNE AVANT LE MOTIF #	sed ‘/#/iNouvelle ligne’ file
AJOUTER UNE NOUVELLE LIGNE APRES LE MOTIF #	sed ‘/#/aNouvelle ligne’ file
REMPLACER LA LIGNE CONTENANT LE MOTIF #	sed ‘/#/cNouvelle ligne’ file
LIRE LES COMMANDES DEPUIS UN FICHIER ( ?)	sed -f fileCommandes fileATraiter
###
CASSER UN FICHIER EN FICHIERS DE 1000 LIGNES	split file
CASSER UN FICHIER EN FICHIERS DE 30 LIGNES	split -l 30 file
CASSER UN FICHIER EN FICHIERS D’UN OCTET (=1 LETTRE)	split -b 1 file
CASSER UN FICHIER EN 5 FICHIERS PLUS PETITS	split -n 5 file
###
	tr
	awk
###
CONVERTIR TYPE D’UN FICHIER EN UN AUTRE	DD
